
body {
background-image: url(../img/feathers.jpg); 
background-blend-mode: lighten; 
padding: 20px; 
}
div {
background: rgba(255, 255, 255, 0.8);  
}

/* I wanted to make the headers for the different section purple and dark blue because it matches the feather opacity background on the webpage */

h1 {
color: rgb(5, 14, 145);
}

.story {
display: flex; 
color: rgb(126, 85, 180); 
margin-top: 100px; 
}
/* I adjusted the top margin of the element just below the navigation bar, to make sure that text wasn't overlapped and that when
 smooth scrolling to different sections in the webpage, that the navigation bar wouldn't overlap it. It took trial and error with a few different pixel sizes. */
.training_tips {
color: rgb(126, 85, 180); 
margin-top: 100px; 
 
}

.race_day_tips {
color: black;
margin-top: 100px;

}


.image {
 display: flex;
 justify-content: center; 
 max-width: 100%; 
 flex-wrap: wrap; 
 border: solid palevioletred;    
}

.image span {
    width: 50%;
}

.image span img{
    width: 100%;
}

/* At first I thought the flex direction column would make my images go in a column, but all it did was stretch the distort the
images beyond their max width, even though normally when thinking of CSS columns that if in a flex-box they would adjust
I removed the flex-direction: column tag and it made my images go from one stretched out image, to two side by side, changing 
to one in my mobile viewport by my media query firing  */
.race_reports_2016 {
color: black;
margin-top: 100px; 
}

.race_reports_2017 {
color: black; 
margin-top: 100px; 
}

section{
    display: flex; 
    flex-wrap: wrap; 
}

section {
border: 1px solid black;
padding-top: .25em; 
}

section div {
border: 1px solid red;   
}

/* .col image {
 display: inline-block;
 vertical-align: top; 
 padding: 3px; 

} */


.navig {

    float: right; 
    position: fixed;
    text-decoration: none; 
    top: 0; 
    border: 1px solid paleturquoise;
    background-color: whitesmoke;  
    width: 95%; 

}
/* I am giving the navigation class I am targeting a width of 100% So that way it expands the fullness of the page and is not cut-off.
What you are left with is a nav bar that expands all the width of the screen that is fixed. The goal is to complement the smooth scroll function */
.navig > ul {
    display: flex;
    list-style: none; 
} 

.navig > ul li {
    float: right;  
    margin: 0 10px; 
}

@media only screen and (max-width: 600px) {
    .image span {
        width: 100%;
    }
}